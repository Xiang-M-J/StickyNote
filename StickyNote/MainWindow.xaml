<Window x:Class="StickyNote.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="MainWindow" Height="300" Width="240" AllowsTransparency="True" WindowStyle="None"  ResizeMode="NoResize">


    <Window.Resources>
        <!--自定义ComboBox(TextBox ToggleButton) Begin-->
        <!--下拉列表中文本框定义 Begin-->
        <Style TargetType="TextBox" x:Key="MyTextBox">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="25"></Setter>
        </Style>
        <!--下拉列表中文本框定义 End-->
        <!--下拉列表中ToggleButton Begin-->
        <Style TargetType="ToggleButton" x:Key="MyToggleButton">
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border Width="12" Height="15" HorizontalAlignment="Right" BorderBrush="Wheat" BorderThickness="0.7,0.5,0,0">
                                <Border.Background>
                                    <SolidColorBrush Color="#7F0CA08F" />
                                </Border.Background>
                                <!--画出ToggleButton中的三角形-->
                                <Path Data="M0,0L3.5,4 7,0z" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--下拉列表中ToggleButton End-->
        
        <!--ComboBoxStyle Begin-->
        <Style x:Key="MyComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <!--设置文字颜色-->
            <Setter Property="Foreground" Value="#FF003A34"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Margin" Value="2,5,2,5"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Border  BorderBrush="White" BorderThickness="0.7" Background="#FFEAE272">
                            <Grid>
                                <!--下拉箭头-->
                                <ToggleButton   Style="{StaticResource MyToggleButton}" Focusable="False"
             IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
             ClickMode="Press">
                                </ToggleButton>
                                <!--项内容-->
                                <ContentPresenter  IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                                                   ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                   VerticalAlignment="Center" Margin="3" HorizontalAlignment="Stretch" />
                                <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Stretch" Focusable="True" Visibility="Collapsed" IsReadOnly="False"/>
                                <!--下拉显示面板HorizontalOffset:设置下拉面板的相对位置-->
                                <Popup HorizontalOffset="-1" Width="{TemplateBinding ActualWidth}"  IsOpen="{TemplateBinding IsDropDownOpen}" Focusable="False"    PopupAnimation="Slide">
                                    <Grid  SnapsToDevicePixels="True" HorizontalAlignment="Stretch"   >
                                        <Border  BorderThickness="1,1,1,1" BorderBrush="White" HorizontalAlignment="Stretch" >
                                            <!--下拉列表中的背景颜色-->
                                            <Border.Background>
                                                <SolidColorBrush Color="#FFDFD1FC" />
                                            </Border.Background>
                                        </Border>
                                        <ScrollViewer  SnapsToDevicePixels="True" HorizontalAlignment="Stretch" >
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Stretch" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ComboBoxStyle End-->
        
        <!--下拉列表中项样式 Begin-->
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="ItemBorder" Padding="2" Margin="1" HorizontalAlignment="Stretch">
                            <ContentPresenter HorizontalAlignment="Stretch"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="ItemBorder" Value="#7F009FF9"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--下拉列表中项样式 End-->
        <!--自定义ComboBox(TextBox ToggleButton) End-->
        
        <!--自定义列表框 Begin -->
        <Style x:Key="MyListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <!--列表元素的定义 Begin-->
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Height="26" x:Name="grid" HorizontalAlignment="Stretch" Background="{Binding GridBack}">
                            <StackPanel Orientation="Horizontal">
                                <Border Width="20" Height="20" CornerRadius="2" HorizontalAlignment="Left" Margin="0 0 0 0">
                                    <Image Source="{Binding ImageSe}"></Image>
                                </Border>
                                <StackPanel>
                                    <TextBlock Text="{Binding Info}"  Margin="10 0 0 0" FontSize="13" Foreground="{Binding FontColor}"/>
                                    <!--<TextBox Visibility="{Binding See}" Text="{Binding Info}"  Margin="10,-20,0,0" FontSize="13" Background="{Binding BoxBackgroud}" HorizontalAlignment="Stretch" BorderBrush="{x:Null}" ></TextBox>-->
                                    <TextBlock Text="{Binding Time}" Foreground="#FF1D1D1D" FontSize="7" Margin="20,0,0,0" FontWeight="Bold"></TextBlock>
                                    <!--<TextBox Text="{Binding Time}" Background="{Binding BoxBackgroud}" FontSize="7" Width="10" Margin="10,-10,0,0" HorizontalAlignment="Stretch" BorderBrush="{x:Null}" Visibility="{Binding See}"></TextBox>-->
                                </StackPanel>
                            </StackPanel>
                            
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="grid" Property="Background" Value="#fceeb9"/>
                            </Trigger>
                            <Trigger Property="Selector.IsSelected" Value="true">
                                <Setter TargetName="grid" Property="Background" Value="#fae388"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <!--列表元素的定义 End-->
                </Setter.Value>
            </Setter>
        </Style>
        <!--自定义列表框 End-->
    </Window.Resources>


    <!--主窗口定义 Begin-->
    <Grid>
        <!--自定义窗口（标题栏，关闭，最小化，调整窗口大小）Begin-->
        <Border Name="border" BorderBrush="CadetBlue" BorderThickness="4" Background="#CCEEE6D7"></Border>
        <Grid HorizontalAlignment="Stretch" Height="24" VerticalAlignment="Top" MouseDown="Grid_MouseDown">
            <Grid.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#009EFD" Offset="0" />
                    <GradientStop Color="#2AF598" Offset="1" />
                </LinearGradientBrush>
            </Grid.Background>
            <Image x:Name="image" HorizontalAlignment="Left" Width="24" Height="24" VerticalAlignment="Top" Source="resources/main.png" >
                <Image.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="关于" Click="MenuItem_Click_5">
                            <MenuItem.Icon>
                                <Image Source="resources/about.png"></Image>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                        
                       
                </Image.ContextMenu>
            </Image>
            <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Height="24" Margin="30,0,0,0" TextWrapping="Wrap" Text="便 笺"
                   VerticalAlignment="Top" Width="70" TextAlignment="Justify" LineHeight="12" FontWeight="Bold"
                   TextTrimming="WordEllipsis" Cursor="Arrow" FontSize="20" Foreground="#CC050130" FontFamily="KaiTi" />
            <Image Name="SeeImage" Source="resources/nosee.png" HorizontalAlignment="Right" Margin="0,0,72,0" Width="24" MouseLeftButtonDown="Image_MouseLeftButtonDown" ></Image>
            <Image x:Name="image2" HorizontalAlignment="Right" Height="24" Margin="0,0,48,0" VerticalAlignment="Bottom" Source="resources/more.png" MouseDown="Image2_MouseDown"></Image>
            <Image x:Name="image1" HorizontalAlignment="Right" Height="24" Margin="0,0,24,0" VerticalAlignment="Bottom" Width="24" Source="resources/minlize.ico" MouseDown="Image1_MouseDown" />
            <Image x:Name="image3" HorizontalAlignment="Right" Height="24" Margin="0,0,0,0" VerticalAlignment="Top" Width="24" Source="resources/cancel.ico" MouseDown="Image3_MouseDown" />
        </Grid>
       
        <Rectangle Cursor="SizeWE" Fill="Transparent"
                   Width="4"
                   VerticalAlignment="Stretch"
                   HorizontalAlignment="Right"
                   MouseLeftButtonDown="window_initiateWiden"
                   MouseLeftButtonUp="window_endWiden"
                   MouseMove="window_Widen"></Rectangle>
        <Rectangle Cursor="SizeWE" Fill="Transparent"
                   Width="7"
                   Margin="-3,0,0,0"
                   VerticalAlignment="Stretch"
                   HorizontalAlignment="Left"
                   MouseLeftButtonDown="window_initiateWiden"
                   MouseLeftButtonUp="window_endWiden"
                   MouseMove="window_WidenL"></Rectangle>
        <Rectangle Cursor="SizeNS" Fill="Transparent"
                   Height="4"
                   VerticalAlignment="Bottom"
                   HorizontalAlignment="Stretch"
                   MouseLeftButtonDown="window_initiateHeight"
                   MouseLeftButtonUp="window_endHeight"
                   MouseMove="window_Height">
        </Rectangle>
        <!--自定义窗口（标题栏，关闭，最小化，调整窗口大小）End-->
        
        <!--列表框-->
        <ListBox  ItemContainerStyle="{StaticResource MyListBoxItem}" x:Name="MyListBox"  Background="White"  Margin="4,24,4,55" KeyDown="MyListBox_KeyDown" MouseDoubleClick="MyListBox_MouseDoubleClick" MouseRightButtonUp="MyListBox_MouseRightButtonUp" MouseRightButtonDown="MyListBox_MouseRightButtonDown" MouseLeftButtonDown="MyListBox_MouseLeftButtonDown"  >
            <ListBox.Style>
                <Style TargetType="ListBox">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBox">
                                <Border x:Name="Bd"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="4">
                                    <ScrollViewer Focusable="False">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.Style>

            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="删除(Del)" Click="MenuItem_Click" Foreground="#FF005245" Background="#FFEFFFDD" >
                        <MenuItem.Icon>
                            <Image Source="resources/delete.png" Width="16" Height="16"></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="导出" Foreground="#FF005245" Background="#FFEFFFDD">
                        <MenuItem.Icon>
                            <Image Source="resources/export.png" Width="16" Height="16"></Image>
                        </MenuItem.Icon>
                        <MenuItem Header="文本文件(*.txt)" Click="MenuItem_Click_1" Background="#FFEAFEFF" Foreground="#FF004B5C">
                            <MenuItem.Icon>
                                <Image Source="resources/Text.png" Width="16" Height="16"></Image>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="标记文档(*.md)" Click="MenuItem_Click_2"  Background="#FFEAFEFF" Foreground="#FF004B5C">
                            <MenuItem.Icon>
                                <Image Source="resources/Markdown.png" Width="16" Height="16"></Image>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="网页文件(*.html)" Click="MenuItem_Click_3" Background="#FFEAFEFF" Foreground="#FF004B5C">
                            <MenuItem.Icon>
                                <Image Source="resources/HTML.png" Width="16" Height="16"></Image>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="详细信息" Foreground="#FF005245" Background="#FFEFFFDD" Click="MenuItem_Click_4">
                        <MenuItem.Icon>
                            <Image Source="resources/Detail.png"></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </ListBox.ContextMenu>
            
        </ListBox>

        <!--下方输入部分 Begin-->
        <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Name="InputStack">
            <StackPanel HorizontalAlignment="Stretch"  Margin="4,0,4,4" VerticalAlignment="Bottom"   Orientation="Horizontal" >
                <DatePicker Name="Dater" HorizontalAlignment="Left" Height="24" Margin="0,0,0,0" VerticalAlignment="Center" Width="110"
                            SelectedDateFormat="Short" BorderBrush="{x:Null}" Foreground="#FF313F00" Background="{x:Null}">
                    <DatePicker.Resources>
                        <Style TargetType="DatePickerTextBox">
                            <Setter Property="IsReadOnly" Value="True"/>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
                
                <StackPanel Width="80" Margin="-6,-4,0,0">
                    <StackPanel Height="12" HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,0,0" Width="80">
                        <TextBlock Text="hh" Margin="12,0,0,0" FontSize="10" FontWeight="Bold"></TextBlock>
                        <TextBlock Text=":" Margin="12,0,0,0" FontSize="10" FontWeight="Bold" ></TextBlock>
                        <TextBlock Text="mm" Margin="8,0,0,0" FontSize="10" FontWeight="Bold"></TextBlock>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Left" Margin="0,0,0,0" Height="18" Orientation="Horizontal" Width="70" >
                        <TextBox Name="hour" Width="18" Margin="10,0,0,0" Height="15" FontSize="10" Background="{x:Null}" BorderBrush="#FF0040FF" 
                                 MaxLength="2" InputMethod.IsInputMethodEnabled="False" PreviewTextInput="TB_PreviewTextInput"></TextBox>
                        <TextBlock Text=":" FontSize="10" VerticalAlignment="Center" FontWeight="Bold" Margin="10,0,0,0"></TextBlock>
                        <TextBox Name="minute" Width="18" Margin="8,0,0,0" Height="15" FontSize="10" Background="{x:Null}" BorderBrush="#FF003EF8"
                                 MaxLength="2" InputMethod.IsInputMethodEnabled="False" PreviewTextInput="TB_PreviewTextInput"></TextBox>
                    </StackPanel>
                    
                </StackPanel>
                <ComboBox x:Name="comboBox" HorizontalAlignment="Left" Height="20" Margin="-5,3,0,0" VerticalAlignment="Top" Width="40" FontSize="10" Style="{StaticResource MyComboBox}">
                    <ComboBoxItem Content="学习" Padding="10,0,0,0" FontSize="10"/>
                    <ComboBoxItem Content="工作" Padding="10,0,0,0" FontSize="10"/>
                    <ComboBoxItem Content="生活" Padding="10,0,0,0" FontSize="10"/>
                    <ComboBoxItem Content="娱乐" Padding="10,0,0,0" FontSize="10"/>
                    <ComboBoxItem Content="其它" Padding="10,0,0,0" FontSize="10"/>
                </ComboBox>
            </StackPanel >
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0,-3,0,4" >
                <TextBox VerticalAlignment="Bottom" Margin="4,0,0,0" Width="160" HorizontalAlignment="Right" Name="ItemText">
                </TextBox>
                <Button Margin="20,0,0,0" Width="19" HorizontalAlignment="Stretch" Content="✚" FontSize="12" Click="Button_Click" AutomationProperties.HelpText="添加" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Wheat"/>
                            <Setter Property="Foreground" Value="#FF036803"/>
                            <Setter Property="BorderBrush" Value="#FF7BCFDD"/>
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FF52D779"/>
                                    <Setter Property="Foreground" Value="#FFEFD5" />
                                    <Setter Property="BorderBrush" Value="#FF00567E"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Margin="10,0,0,0" Width="19" HorizontalAlignment="Stretch" Content="⇓" FontStretch="Expanded" FontSize="12"  FontWeight="Bold" AutomationProperties.HelpText="导出" Click="Button_Click_1" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Wheat"/>
                            <Setter Property="Foreground" Value="#FF036803"/>
                            <Setter Property="BorderBrush" Value="#FF7BCFDD"/>
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FF52D779"/>
                                    <Setter Property="Foreground" Value="#FFEFD5" />
                                    <Setter Property="BorderBrush" Value="#FF00567E"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

        </StackPanel>
        <!--下方输入部分 End-->
    </Grid>
<!--主窗口定义 End-->
</Window>